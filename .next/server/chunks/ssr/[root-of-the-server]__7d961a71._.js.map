{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/User/OneDrive/software/paws-preferences/app/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect } from 'react';\nimport { motion, useMotionValue, useTransform } from 'framer-motion';\nimport axios from 'axios';\nimport Image from 'next/image';\n\n// Define a type for a Cat object\ninterface Cat {\n  id: string;\n  url: string;\n  tags: string[];\n  createdAt: string;\n  mimeType: string;\n}\n\n// Define a type for an info object\ninterface Info {\n  offset: {\n    x: number;\n    y: number;\n  },\n  delta: {\n    x: number;\n    y: number;\n  },\n  velocity: {\n    x: number;\n    y: number;\n  },\n  point: {\n    x: number;\n    y: number;\n  }\n}\n\nconst CAT_COUNT = 15; // A fixed number of cat pictures (e.g., 10-20)\nconst NEXT_CATS_PREVIEW_COUNT = 3; // How many upcoming cats to show at the bottom\n\nconst Home: React.FC = () => {\n  const [cats, setCats] = useState<Cat[]>([]);\n  const [likedCats, setLikedCats] = useState<Cat[]>([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [isSwiping, setIsSwiping] = useState(false);\n\n  // Motion values for drag gesture of the main card\n  const x = useMotionValue(0);\n  const rotate = useTransform(x, [-200, 0, 200], [-10, 0, 10]);\n  const opacity = useTransform(x, [-150, 0, 150], [0, 1, 0]);\n\n  useEffect(() => {\n    const fetchCats = async () => {\n      try {\n        const fetchedCats: Cat[] = [];\n        for (let i = 0; i < CAT_COUNT; i++) {\n          const response = await axios.get('https://cataas.com/cat?json=true');\n          fetchedCats.push(response.data);\n        }\n        setCats(fetchedCats);\n      } catch (error) {\n        console.error('Error fetching cats:', error);\n        setCats(\n          Array(CAT_COUNT).fill(0).map((_, i) => ({\n            id: `mock-cat-${i}`,\n            url: `https://via.placeholder.com/300x400?text=Cat+${i + 1}`,\n            tags: [],\n            createdAt: '',\n            mimeType: ''\n          }))\n        );\n      }\n    };\n\n    fetchCats();\n  }, []);\n\n  const handleSwipe = (info: Info, cat: Cat) => {\n    setIsSwiping(false);\n    const direction = info.offset.x > 0 ? 'right' : 'left';\n    if (Math.abs(info.offset.x) > 100) {\n      if (direction === 'right') {\n        setLikedCats((prev) => [...prev, cat]);\n      }\n      setTimeout(() => {\n        setCurrentIndex((prev) => {\n          const newIndex = prev + 1;\n          if (newIndex >= CAT_COUNT) setShowSummary(true);\n          return newIndex;\n        });\n        x.set(0); // Reset position for next card\n      }, 20); // Allow animation to complete\n    } else {\n      x.set(0);\n    }\n  };\n\n  const handlePointerDown = () => setIsSwiping(true);\n\n  const handleButtonSwipe = (direction: 'left' | 'right') => {\n    const currentCat = cats[currentIndex];\n    if (!currentCat) return;\n    x.set(direction === 'right' ? 100 : -100);\n    if (direction === 'right') {\n      setLikedCats((prev) => [...prev, currentCat]);\n    }\n    setTimeout(() => {\n      setCurrentIndex((prev) => {\n        const newIndex = prev + 1;\n        if (newIndex >= CAT_COUNT) setShowSummary(true);\n        return newIndex;\n      });\n      x.set(0);\n    }, 20);\n  };\n\n  if (showSummary) {\n    const allTags = Array.from(\n      new Set(likedCats.flatMap(cat => cat.tags))\n    ).filter(Boolean); // Remove empty strings if any\n\n    return (\n      <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-gray-50 to-gray-200 px-4\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-8 max-w-md w-full flex flex-col items-center\">\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-2 text-center\">Your Cat Preferences</h1>\n          <p className=\"text-gray-500 mb-2 text-center\">\n            You liked <span className=\"font-semibold\">{likedCats.length}</span> out of {CAT_COUNT} cats!\n          </p>\n\n          <div className=\"grid grid-cols-3 gap-3 w-full mb-6\">\n            {likedCats.length > 0 ? (\n              likedCats.map((cat) => (\n                <Image\n                  key={cat.id}\n                  src={cat.url}\n                  alt=\"Liked Cat\"\n                  className=\"w-full h-24 object-cover rounded-lg shadow\"\n                  width={100}\n                  height={100}\n                />\n              ))\n            ) : (\n              <p className=\"col-span-3 text-center text-gray-400\">No cats liked. Try again!</p>\n            )}\n          </div>\n          {allTags.length > 0 && (\n            <div className=\"mb-4 text-center\">\n              <span className=\"text-gray-500\">Your cat preferences are:</span>\n              <div className=\"flex flex-wrap gap-2 justify-center mt-2\">\n                {allTags.map((tag, index) => (\n                  <span key={index} className=\"bg-gray-200 text-gray-600 text-xs px-3 py-1 rounded-full\">\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n          <button\n            onClick={() => window.location.reload()}\n            className=\"mt-2 px-6 py-2 bg-gray-800 text-white rounded-full font-semibold shadow hover:bg-gray-700 transition\"\n          >\n            Start Over\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  const currentCat = cats[currentIndex];\n  const upcomingCats = cats.slice(currentIndex + 1, currentIndex + NEXT_CATS_PREVIEW_COUNT + 1);\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-gray-50 to-gray-200 px-4\">\n      <div className=\"w-full max-w-xs flex flex-col items-center\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-2 text-center\">Paws & Preferences</h1>\n        <p className=\"text-gray-500 mb-4 text-center\">Swipe right if you like the kitty, left if you don&apos;t!</p>\n        <div className=\"relative w-full h-[400px] flex justify-center items-center mb-4\">\n\n          {/* Main Current Cat Card */}\n          {currentCat && (\n            <motion.div\n              key={currentCat.id}\n              className=\"absolute w-full h-[400px] rounded-2xl bg-cover bg-center shadow-2xl flex items-end justify-center\"\n              style={{\n                backgroundImage: `url(${currentCat.url})`,\n                x: x,\n                rotate: rotate,\n                opacity: opacity,\n                zIndex: 2\n              }}\n              drag=\"x\"\n              dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\n              dragElastic={0.8}\n              onDragEnd={(event, info) => handleSwipe(info, currentCat)}\n              onPointerDown={handlePointerDown}\n              animate={isSwiping ? {} : { x: 0, rotate: 0, opacity: 1, scale: 1, y: 0 }}\n              transition={{ type: 'spring', stiffness: 300, damping: 30 }}\n            >\n              <div className=\"w-full flex justify-between items-center px-4 pb-4\">\n                <span className=\"bg-black/40 text-white text-xs px-3 py-1 rounded-full\">\n                  Cat {currentIndex + 1} / {CAT_COUNT}\n                </span>\n              </div>\n            </motion.div>\n          )}\n          {/* Placeholder if no more cats */}\n          {!currentCat && currentIndex < CAT_COUNT && (\n            <div className=\"absolute w-full h-full flex items-center justify-center bg-gray-100 rounded-2xl text-gray-400\">\n              Loading cats...\n            </div>\n          )}\n        </div>\n\n        {/* Next Cat Images Preview Row */}\n        <div className=\"flex justify-center gap-2 mb-2 h-10\">\n          {upcomingCats.map((cat, index) => (\n            <motion.div\n              key={cat.id}\n              className=\"w-20 h-10 rounded-lg bg-cover bg-center shadow-md border-2 border-gray-200\"\n              style={{\n                backgroundImage: `url(${cat.url})`,\n              }}\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ delay: index * 0.1, type: 'spring', stiffness: 300, damping: 30 }}\n            />\n          ))}\n          {upcomingCats.length === 0 && currentIndex < CAT_COUNT && (\n            <p className=\"text-xs text-gray-400\">No upcoming cats to preview</p>\n          )}\n        </div>\n\n        {/* Buttons */}\n        <div className=\"flex gap-8 mt-2\">\n          <button\n            onClick={() => handleButtonSwipe('left')}\n            className=\"w-14 h-14 rounded-full bg-white shadow flex items-center justify-center text-red-500 text-2xl hover:bg-red-50 active:scale-95 transition\"\n            aria-label=\"Dislike\"\n          >\n            <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\" className='mt-1.5'>\n              <path d=\"M7 14V3H19.5C20.3284 3 21 3.67157 21 4.5V11.5C21 12.3284 20.3284 13 19.5 13H14.72L15.64 18.57C15.74 19.19 15.22 19.75 14.59 19.75C14.22 19.75 13.89 19.53 13.76 19.19L11.29 13H7Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinejoin=\"round\" />\n              <rect x=\"3\" y=\"3\" width=\"4\" height=\"11\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n            </svg>\n          </button>\n          <button\n            onClick={() => handleButtonSwipe('right')}\n            className=\"w-14 h-14 rounded-full bg-white shadow flex items-center justify-center text-green-500 text-2xl hover:bg-green-50 active:scale-95 transition\"\n            aria-label=\"Like\"\n          >\n            <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\" className='mb-1.5'>\n              <path d=\"M7 10V21H19.5C20.3284 21 21 20.3284 21 19.5V12.5C21 11.6716 20.3284 11 19.5 11H14.72L15.64 5.43C15.74 4.81 15.22 4.25 14.59 4.25C14.22 4.25 13.89 4.47 13.76 4.81L11.29 11H7Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinejoin=\"round\" />\n              <rect x=\"3\" y=\"10\" width=\"4\" height=\"11\" rx=\"2\" stroke=\"currentColor\" strokeWidth=\"2\" />\n            </svg>\n          </button>\n        </div>\n        {/* Remaining count */}\n        {currentIndex < CAT_COUNT && (\n          <p className=\"text-xs text-gray-400 mt-4\">{CAT_COUNT - currentIndex} cats remaining</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"names":[],"mappings":"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","debugId":null}}]
}